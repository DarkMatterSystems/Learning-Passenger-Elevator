
    Matrix Model Simulator - Learning Edition - Version 1.0.0
    Development on THU-02-JAN-2014 @ 12:18:41
    Copyright (C) 2014, Dark Matter Systems Ltd.  All rights reserved.

    Connection established: MATRIX*CORE - Version 0.5.2

$
$ | Passenger Elevator Scenario - Passenger Travels from First to Fifth Floor
$
$ | On each floor a control panel is set into the wall by the elevator doors.  A
$ | floor control panel has a call button.
$ |
$ | Inside the car there is another control panel containing seven floor request
$ | buttons plus a open door button and a close door button.
$ |
$ | Normally, both control panels are handled by a Controls service domain that
$ | supplies the following events:
$ |
$ |    |     Source: Floor Passenger
$ |    Floor : Request_service
$ |    |
$ |    |     Source: Car Passenger
$ |    Car      : Open_door
$ |    Car      : Close_door
$ |    Car_Stop : Go_to_floor
$ |
$ | Also, a Machinery service domain supplies the following car and door sensor
$ | events:
$ |
$ |    |     Source: Door Sensors
$ |    Door : Open_completed
$ |    Door : Obstruction
$ |    Door : Clear
$ |    Door : Close_completed
$ |    |
$ |    |     Source: Car Sensors
$ |    Car : Moving
$ |    Car : Floor_approaching
$ |    Car : Car_stopped
$ |
$ | In this simulation, they are supplied by the developer.
$ |
$ | The events are specified in the model under the EventContext statement.
$ |
$ | A Matrix model acts on the Real World by issuing events to actuators via
$ | service domains.  In the Passenger Elevator model, exported events are
$ | directed to the Machinery domain and are indicated by an
$ | "EVENT -> Machinery::" prefix.
$
$
$ | Initialise System
$ | -----------------
$
$ | At the start of the simulation, all elevators are at the first floor
$ | and there are no requests for service pending.
$
$ trace all off
$ trace display on
$ trace events on
$ trace states on
$
$ initialise all
$
$ display all
$
$
$ | Passenger Calls Elevator
$ | ------------------------
$
$ | All elevators at the first floor.  A passenger at the first floor wishes
$ | to up to fifth floor.
$
$ | Passenger at the first floor calls the elevator by presing the call button.
$ create event identity Elevator_Management Floor Request_service 1

EVENT -> Machinery::Door_Opening

$
$ | Event generated by door sensor.
$ create event identity Elevator_Management Door Open_completed 1

$
$
$ | Passenger Enters Elevator
$ | -------------------------
$
$ | Passenger in car presses the fifth floor button.
$ create event identity Elevator_Management Car_Stop Go_to_floor 1 5

$
$ | Event generated as external timer event.
$ create event identity Elevator_Management Car Close_door 1

EVENT -> Machinery::Door_Closing

$
$ | Event generated by door sensor.
$ create event identity Elevator_Management Door Close_completed 1

EVENT -> Machinery::Car.Moving (Direction:UP)

$
$
$ | Elevator Starts Ascent
$ | ----------------------
$
$ | Event generated by car sensor.
$ create event identity Elevator_Management Car Moving 1

$
$ | Events generated by car sensor as it moves.
$ create event identity Elevator_Management Car Floor_approaching 1 2

$ create event identity Elevator_Management Car Floor_approaching 1 3

$ create event identity Elevator_Management Car Floor_approaching 1 4

$ create event identity Elevator_Management Car Floor_approaching 1 5

EVENT -> Machinery::Car.Slowing ()

$
$ | Event generated by car sensor.
$ create event identity Elevator_Management Car Car_stopped 1

EVENT -> Machinery::Door_Opening

$
$ | Event generated by door sensor.
$ create event identity Elevator_Management Door Open_completed 1

$
$ display entity Elevator_Management Car
$ display entity Elevator_Management Door
$
$
$ | Passenger Exits Elevator
$ | ------------------------
$
$ | Event generated as external timer event.
$ create event identity Elevator_Management Car Close_door 1

EVENT -> Machinery::Door_Closing

$
$ | Event generated by door sensor.
$ create event identity Elevator_Management Door Close_completed 1

$
$
$ host pause
Press any key to continue . . .
$
$ exit

        Model Simulation Elapsed Time: 00:00:01

    Disconnected from MATRIX*CORE on THU-02-JAN-2014 @ 12:18:42
